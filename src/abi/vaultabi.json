[
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_participationToken",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_participationTokenAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_minFundingAmount",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_timeStamp",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_exchangeRate",
        "type": "uint256"
      },
      {
        "internalType": "address",
        "name": "_withdrawlAddress",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_developerFeeAddress",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_developerFeePercentage",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_projectURL",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_projectTitle",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_projectDescription",
        "type": "string"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "FundingVault__AmountCannotBeZero",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__EthTransferFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__EthTransferToDeveloperFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__EthTransferToWithdrawlFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__NotEnoughTokens",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__TokenTransferFailed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__deadlineNotPassed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__deadlinePassed",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__fundsWithdrawn",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__minFundingAmountNotReached",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__minFundingAmountReached",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "FundingVault__noTokenBalance",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "FundsWithdrawn",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "user",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "Refund",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "TokensPurchased",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "additionalTokens",
        "type": "uint256"
      }
    ],
    "name": "addTokens",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "getVaults",
    "outputs": [
      {
        "components": [
          {
            "internalType": "address",
            "name": "withdrawlAddress",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "participationToken",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "participationTokenAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "minFundingAmount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "timeStamp",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "exchangeRate",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "projectURL",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "projectTitle",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "projectDescription",
            "type": "string"
          }
        ],
        "internalType": "struct FundingVault.Vault",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "purchaseTokens",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "refundTokens",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawFunds",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "UnsoldTokenAmount",
        "type": "uint256"
      }
    ],
    "name": "withdrawUnsoldTokens",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
